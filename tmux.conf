# default terminal type
set -g default-terminal "screen-256color"

# disable mouse support
set -g mouse off

# unbind the default prefix
unbind-key C-b

# set backtick as prefix
set -g prefix `

# type backtick twice to send it to the application
bind-key ` send-prefix

# timeout to wait for a comand to execute
set -sg escape-time 1

# start counting windows from 1
set -g base-index 1

# renumber windows, so indexes remain sequential
set-option -g renumber-windows on

# start counting panes from 1
set-window-option -g pane-base-index 1

# define left part of the status bar as one empty character for better readability
set -g status-left " "

# define right part of the status bar as session, hostname and time
set -g status-right-length 100
set -g status-right '#[fg=#eee8d5]#S #[fg=#268bd2]#h #[fg=#839496]%d.%m.%y #[fg=#eee8d5]%H:%M '

# define activity and bell style
set-window-option -g window-status-activity-style blink
set-window-option -g window-status-bell-style bold

# switch panes using Alt-arrow without prefix
# bind -n M-Left select-pane -L
# bind -n M-Right select-pane -R
# bind -n M-Up select-pane -U
# bind -n M-Down select-pane -D

# widow colors
set-window-option -g window-style 'bg=#073642'
set-window-option -g window-active-style 'bg=#073642'

# message bar
set -g message-style fg="#dc322f"

# set status bar colors
set -g status-style bg='#002b36',fg='#eee8d5'

# set panel border colors
set -g pane-active-border-style fg="#268bd2",bg='#073642'
set -g pane-border-style fg="#93a1a1",bg='#073642'

# use vi keys in copy and choice modes
set-window-option -g mode-keys vi

# clock
set-window-option -g clock-mode-colour "#268bd2"
set-window-option -g clock-mode-style 24

# set status bar window list colors
set -g window-status-current-format "#[fg=#268bd2]#[bg=#002b36][#I] #W"
set -g window-status-format         "#[fg=#93a1a1]#[bg=#002b36][#I] #W"

# Set window notifications
setw -g monitor-activity on
set -g visual-activity on

# Automatically set window title
setw -g automatic-rename on

# save output (toggle)
bind W pipe-pane -o "tee -a  ~/#W.log" \; display "Toggled logging to ~/#W.log"

# capture buffer
bind-key S capture-pane -b temp-capture-buffer -S - \; save-buffer -b temp-capture-buffer ~/tmux.buffer \; delete-buffer -b capture-buffer
bind-key M-S command-prompt -I "~/tmux.buffer" -p "Store current pane contents to file:" "capture-pane -b temp-capture-buffer -S -; save-buffer -b temp-capture-buffer %1; delete-buffer -b capture-buffer"

# create new window and change name
bind-key C command-prompt -p "Create window with name:" "new-window; rename-window '%%'"


# reload tmux conf
bind r source-file ~/.tmux.conf \; display "Reloaded!"

bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# moving between panes
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# open new window in current pane directory
bind c new-window -c "#{pane_current_path}"

# copy paste
bind P paste-buffer
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel 'xclip -se c -i'

# Show Git working tree status
set -g status-right '#(gitmux -q -fmt tmux #{pane_current_path})'
